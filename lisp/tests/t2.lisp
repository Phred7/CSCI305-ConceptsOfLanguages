(setq x '(A B C D E))
(setq y 10)

(print y)
(print (type-of y))
(print (atom y))
(terpri)
(print x)
(print (type-of x))
(print (atom x))


(defun main()
(terpri)
(princ "Enter function: ")
(setq read (read))
(print read)
(print (type-of read))
(print (atom read))
(print "First: ")
(princ (first read))
(print "Last: ")
(princ (last read))
(print "~~~~")
(print (type-of (first read)))
(print (type-of (last read)))
(terpri)
(print "~~~~z:")
(terpri)
(setq z (first read))
(print z)
(print (type-of z))
(setq z2 (string z))
(print z2)
;;(print (first z))
(print "~~~~w:")
(terpri)
(setq w (last read))
(print w)
(print (type-of w))
(print (first w))
(print "~~~~w2:")
(terpri)
(setq w2 (first w))
(print w2)
(print (type-of w2))
(print (first w2))
(print (last w2))
(print "~~~~w3:")
(terpri)
(setq w3 (last w2))
(print w3)
(print (type-of w3))
(print (first w3))
(print (last w3))
(terpri)
(print (type-of (first w3)))
(print (first (first w3)))
(print (last (first w3)))
(print (type-of (first (first w3))))
(terpri)
(terpri)
(print "~~~~conds:")
(princ w3)
(print (first (first (last (first (last read))))))
(terpri)
(terpri)
(setq pal "PALENDROMEP")
(print pal)
(print (type-of pal))
(print z2)
(print (type-of z2))
(print (equal pal z2))
(cond((equal pal z2) (print "truth")))
)




(main)
